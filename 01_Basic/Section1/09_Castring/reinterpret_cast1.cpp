// C++의 4개의 캐스팅 연산자
// -----------------------------------------------------------------------------------
// 1) static_cast
//  가장 기본적인 캐스팅 연산자
//  정수와 실수 사이의 변환, 열거형과 정수 사이의 변환, 
//  void* => 다른 타입* 변환
//  배열 => 포인터, 함수 => 함수 포인터 등
//  상수성을 제거하거나 서로 다른 타입의 포인터 끼리의 변환은 허용하지 않음(단, 상속관계는 허용)
// -----------------------------------------------------------------------------------
// 2) reinterpret_cast
//  서로 다른 포인터 타입끼리의 변환
//  정수와 포인터 사이의 변환
// -----------------------------------------------------------------------------------
// 3) const_cast
//  포인터와 참조형의 상수성과 volatile 속성을 제거하는데 사용
// -----------------------------------------------------------------------------------
// 4) dynamic_cast
//  안전한 다운 캐스팅(기반 클래스 포인터를 안전하게 파생 클래스 타입의 포인터로 캐스팅할 때 사용)
//  실행 시간 캐스팅 - 실행 시간 오버헤드가 존재
// -----------------------------------------------------------------------------------

int main()
{
    int n = 10;
    
    double* p1 = reinterpret_cast<double*>(&n); // 서로 다른 포인터 타입끼리의 변환
    
    int* p2 = reinterpret_cast<int*>(10);       // 정수와 포인터 사이의 변환
    
    //double d = reinterpret_cast<double>(n);   // error
}